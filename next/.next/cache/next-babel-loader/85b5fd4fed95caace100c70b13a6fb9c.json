{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\xord\\\\first_assignment\\\\counter-app\\\\next\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState(),\n      apiResponse = _useState[0],\n      setApiResponse = _useState[1];\n\n  var callAPI = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fetch(\"http://localhost:4000/testAPI\").then(function (res) {\n                return res.text();\n              }).then(function (res) {\n                return setApiResponse({\n                  apiResponse: res\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function callAPI() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    callAPI();\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, apiResponse));\n};\n\n_s(Index, \"mRHtSisL3S7gZhofxm53vV9yIso=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/xord/first_assignment/counter-app/next/pages/index.js"],"names":["useState","useEffect","Index","apiResponse","setApiResponse","callAPI","fetch","then","res","text"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACoBF,QAAQ,EAD5B;AAAA,MACXG,WADW;AAAA,MACEC,cADF;;AAGlB,MAAMC,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,eADR,EAEGF,IAFH,CAEQ,UAACC,GAAD;AAAA,uBAASJ,cAAc,CAAC;AAAED,kBAAAA,WAAW,EAAEK;AAAf,iBAAD,CAAvB;AAAA,eAFR;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPH,OAAO;AAAA;AAAA;AAAA,KAAb;;AAMAJ,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,WAAL,CADF,CADF;AAKD,CAlBD;;GAAMD,K;;KAAAA,K;AAoBN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst Index = () => {\r\n  const [apiResponse, setApiResponse] = useState();\r\n\r\n  const callAPI = async () => {\r\n    fetch(\"http://localhost:4000/testAPI\")\r\n      .then((res) => res.text())\r\n      .then((res) => setApiResponse({ apiResponse: res }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{apiResponse}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}